Token{ Type=KEYWORD.INT, Value = int }
Token{ Type=IDENTIFIER, Value = f }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.LTRIBRACE, Value = { }
Token{ Type=ARRAY, Value = float[] }
Token{ Type=IDENTIFIER, Value = temp }
Token{ Type=OPERATORS.EQ, Value = = }
Token{ Type=SEPARATOR.LTRIBRACE, Value = { }
Token{ Type=LITERAL.FLOATLITERAL, Value = 1.2 }
Token{ Type=SEPARATOR.COMMA, Value = , }
Token{ Type=LITERAL.FLOATLITERAL, Value = 1e2 }
Token{ Type=SEPARATOR.COMMA, Value = , }
Token{ Type=LITERAL.FLOATLITERAL, Value = .1E2 }
Token{ Type=SEPARATOR.RTRIBRACE, Value = } }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=KEYWORD.RETURN, Value = return }
Token{ Type=LITERAL.INTEGERLITERAL, Value = 200 }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=SEPARATOR.RTRIBRACE, Value = } }
Token{ Type=KEYWORD.INT, Value = int }
Token{ Type=IDENTIFIER, Value = main }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.LTRIBRACE, Value = { }
Token{ Type=COMMENT, Value = /* Init */ }
Token{ Type=KEYWORD.INT, Value = int }
Token{ Type=IDENTIFIER, Value = main }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=KEYWORD.INT, Value = int }
Token{ Type=IDENTIFIER, Value = i }
Token{ Type=OPERATORS.EQ, Value = = }
Token{ Type=LITERAL.INTEGERLITERAL, Value = 1 }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=IDENTIFIER, Value = main }
Token{ Type=OPERATORS.EQ, Value = = }
Token{ Type=IDENTIFIER, Value = f }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=KEYWORD.IF, Value = if }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=IDENTIFIER, Value = i }
Token{ Type=OPERATORS.NOTEQ, Value = != }
Token{ Type=LITERAL.INTEGERLITERAL, Value = 2 }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=KEYWORD.BOOLEAN, Value = boolean }
Token{ Type=IDENTIFIER, Value = temp }
Token{ Type=OPERATORS.EQ, Value = = }
Token{ Type=LITERAL.BOOLEANLITERAL, Value = true }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=IDENTIFIER, Value = putStringLn }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=LITERAL.STRINGLITERAL, Value = "Test string" }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=IDENTIFIER, Value = putIntLn }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=IDENTIFIER, Value = i }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=SEPARATOR.LTRIBRACE, Value = { }
Token{ Type=KEYWORD.WHILE, Value = while }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=LITERAL.BOOLEANLITERAL, Value = true }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.LTRIBRACE, Value = { }
Token{ Type=KEYWORD.INT, Value = int }
Token{ Type=IDENTIFIER, Value = i }
Token{ Type=OPERATORS.EQ, Value = = }
Token{ Type=LITERAL.INTEGERLITERAL, Value = 2 }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=KEYWORD.INT, Value = int }
Token{ Type=IDENTIFIER, Value = main }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=KEYWORD.INT, Value = int }
Token{ Type=IDENTIFIER, Value = f }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=IDENTIFIER, Value = main }
Token{ Type=OPERATORS.EQ, Value = = }
Token{ Type=IDENTIFIER, Value = f }
Token{ Type=OPERATORS.EQ, Value = = }
Token{ Type=LITERAL.INTEGERLITERAL, Value = 100 }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=IDENTIFIER, Value = putIntLn }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=IDENTIFIER, Value = i }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=IDENTIFIER, Value = putIntLn }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=IDENTIFIER, Value = main }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=IDENTIFIER, Value = putIntLn }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=IDENTIFIER, Value = f }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=SEPARATOR.RTRIBRACE, Value = } }
Token{ Type=SEPARATOR.RTRIBRACE, Value = } }
Token{ Type=IDENTIFIER, Value = putIntLn }
Token{ Type=SEPARATOR.LBRACK, Value = ( }
Token{ Type=IDENTIFIER, Value = main }
Token{ Type=SEPARATOR.RBRACK, Value = ) }
Token{ Type=SEPARATOR.SEMI, Value = ; }
Token{ Type=SEPARATOR.RTRIBRACE, Value = } }
